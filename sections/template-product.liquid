<link rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<script src="{{ 'product-model.js' | asset_url }}" defer></script>

<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 20px;
  }
  .swiper-pagination-bullet-active {
    background: red !important;
    bottom: 0 !important;
  }
  .product--info {
    height: fit-content;
  }
</style>

<div x-data="{productModalOpen: false}">
  <div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
      <div class="product--medias">
        <div class="hidden md:block">
          {% for media in product.media %}
            <div class="h-100 overflow-hidden p-2">
              {% render 'product-media', prod_media: media %}
            </div>
          {% endfor %}
        </div>

        <div class="md:hidden">
          <div class="swiper">
            <div class="swiper-wrapper">
              {% for media in product.media %}
                <div class="swiper-slide">
                  <div class="h-[100vw] overflow-hidden p-2">
                    {% render 'product-media', prod_media: media %}
                  </div>
                </div>
              {% endfor %}
            </div>

            <div class="swiper-pagination"></div>

            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
          </div>
        </div>
      </div>

      <div class="product--info sticky top-5 p-2">
        {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
          <input type="hidden" name="id" value="{{ selected_variant.id }}">

          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'vendor' %}
                <div class="my-3 mx-2">
                  <span class="text-xs text-gray-500">{{ product.vendor }}</span>
                </div>
              {% when 'title' %}
                <div class="my-3 mx-2">
                  <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
                </div>
              {% when 'price' %}
                <div class="my-3 mx-2" id="price-{{ section.id }}">
                  <span class="text-base text-gray-500 line-through">
                    {{- selected_variant.compare_at_price | money -}}
                  </span>
                  <span class="text-lg text-gray-500">{{ selected_variant.price | money }}</span>
                  {% if selected_variant.price < selected_variant.compare_at_price %}
                    <span class="text-sm px-5 py-1 font-bold bg-red-500 rounded text-white mx-4">Sale</span>
                  {% endif %}
                </div>
              {% when 'variant_selector' %}
                <div class="my-3 mx-2">
                  {% unless product.has_only_default_variant %}
                    <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                      {% for option in product.options_with_values %}
                        <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                        <div class="my-2">
                          <select
                            name="options[{{ option.name | escape }}]"
                            id="Option-{{ section.id }}-{{ forloop.index0 }}"
                            class="w-full border py-1 px-3"
                          >
                            {% for value in option.values %}
                              <option
                                value="{{ value | escape }}"
                                {% if option.selected_value == value %}
                                  selected="selected"
                                {% endif %}
                              >
                                {{ value }}
                              </option>
                            {% endfor %}
                          </select>
                        </div>
                        <script type="application/json">
                          {{ product.variants | json }}
                        </script>
                      {% endfor %}
                    </variant-selector>
                  {% endunless %}
                </div>
              {% when 'quantity' %}
                <div class="my-3 mx-2">
                  <label for="Quantity-{{ section.id }}">Quantity</label>
                  <div class="my-2">
                    <input
                      type="number"
                      name="quantity"
                      id="Quantity-{{ section.id }}"
                      value="1"
                      min="1"
                      class="w-full border px-2 py-2"
                    >
                  </div>
                </div>
              {% when 'description' %}
                <div class="my-3 mx-2 text-gray-700 text-justify md:text-justify">
                  {{ product.description }}
                </div>
              {% when 'checkout_btn' %}
                <div class="my-3 mx-2">
                  <button
                    type="submit"
                    name="add"
                    class="w-full px-6 py-4 cursor-pointer border text-base font-medium bg-red-700 text-white hover:bg-red-600"
                    {% if selected_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                    {% if selected_variant.available == false %}
                      Sold Out
                    {% else %}
                      Add To Cart
                    {% endif %}
                  </button>
                </div>
              {% when 'offer' %}
              <div class="my-3 mx-2 bg-red-100 flex flex-row justify-start items-center"> 
                {% assign offerIconEnable =  block.settings.show_hide_icon_offer  %}
                {% if offerIconEnable %}              
                {% render 'icon-star'  %}
                {% endif %}
                <span class="text-md ml-2">{{ block.settings.offer_content }}</span>
              </div>
              {% else %}

            {% endcase %}
          {% endfor %}
        {% endform %}
      </div>
    </div>
  </div>

  <style>
    .media model-viewer, .media > *{
      display:block;
      position:absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
    }
  </style>

  <div id="productModelModal">
    <div x-show="productModalOpen" class="w-full h-full z-50 items-center fixed inset-0">
      <div class="relative w-full h-full bg-white">
        <div class="relative">
          <div class="flex justify-between items-start p-5 border-b">
            <h2 class="text-xl font-bold text-gray-700">3D Model Preview</h2>
            <button
              x-on:click="productModalOpen = false"
              class="text-gray-400 bg-transparent hover:text-gray-700 rounded text-sm p-2 ml-auto inline-flex items-center"
            >
              {% render 'close-icon' %}
            </button>
          </div>

          <div id="body" class="media block relative" style="padding-top: min(calc(100vh - 5rem),100%);"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('change', this.onVariantChange);
    }
    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();
      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }
    //grab the currently selected options by the customer by reading the value of the select elements
    //and saving them in an array
    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
      console.log(this.options);
    }
    //Only once, parse the < type="application/json"> embedded in the HTML, which contains product.variants (from Shopify).
    //Save it as this.variantData so we donâ€™t parse it again.
    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }
    //Loop through all variants.and for each variant:
    //Check if its options exactly match what the customer selected.
    //If yes then this is the variant!

    /*getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options.map((option, index) => {
          this.options[index] === option;
        }).includes(false);
        if(findings) return variant;
      });
      console.log(this.currentVariant);
    }*/

    //simpler version
    getSelectedVariant() {
      // Find variant where all options match selected options
      this.currentVariant = this.getVariantJSON().find((variant) =>
        variant.options.every((option, index) => option === this.options[index])
      );
      console.log(this.currentVariant);
    }

    updateURL() {
      if (!this.currentVariant) return;
      history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
  }
  customElements.define('variant-selector', VariantSelector);
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    try {
      const swiper = new Swiper('.swiper', {
        direction: 'horizontal',
        pagination: {
          el: '.swiper-pagination',
        },
        navigation: {
          prevEl: '.swiper-button-prev',
          nextEl: '.swiper-button-next',
        },
      });
    } catch (e) {
      console.log('SwiperJS is not defined');
    }
  });
</script>

{% schema %}
{
  "name": "Product",
  "settings": [
    {
      "type": "text",
      "id":"offers_text",
      "label": "Customize the offer title",
      "default":"this is the schema for offers"
    }
  ],
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_btn",
      "name": "Checkout button",
      "limit": 1
    },
    {
      "type": "offer",
      "name": "Offers",
      "settings": [
         {
           "type": "text",
           "id": "offer_content",
           "label": "Write your offer"
         },
         {
            "type": "checkbox",
            "id": "show_hide_icon_offer",
            "label": "Show / Hide offer icon",
            "default": true
         }
       ]
    }
  ]
}
{% endschema %}
